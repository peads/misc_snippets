cmake_minimum_required(VERSION 3.22)
SET(PROJECT_NAME misc_snippets)
project(${PROJECT_NAME} LANGUAGES C)
set(CMAKE_C_STANDARD 99)

#add_compile_options(-g)
add_compile_options(-O3)
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -march=native -mtune=intel -mavx2 -fomit-frame-pointer")
include_directories("${CMAKE_HOME_DIRECTORY}/timed_functions/include")

add_subdirectory(timed_functions)
add_subdirectory(inverse_sqrt)
add_subdirectory(sqrt)
add_subdirectory(complex)
add_subdirectory(swap)
add_subdirectory(argz)
add_subdirectory(bitshift)
add_subdirectory(rotate)
add_subdirectory(fabs)
add_subdirectory(atan2)
add_subdirectory(breakinguparrays)

if(UNIX AND NOT APPLE)
    target_link_libraries(argz PUBLIC m)
    target_link_libraries(complex PUBLIC m)
    target_link_libraries(sqrt PUBLIC m)
    target_link_libraries(rotate PUBLIC m)
    target_link_libraries(fabs PUBLIC m)
    target_link_libraries(atan2 PUBLIC m)
endif()

target_link_libraries(complex PUBLIC timed_functions)
target_link_libraries(inverse_sqrt PUBLIC timed_functions)
target_link_libraries(swaps PUBLIC timed_functions)
target_link_libraries(argz PUBLIC timed_functions)
target_link_libraries(bitshift PUBLIC timed_functions)
target_link_libraries(rotate PUBLIC timed_functions)
target_link_libraries(fabs PUBLIC timed_functions)
target_link_libraries(atan2 PUBLIC timed_functions)
target_link_libraries(sqrt PUBLIC timed_functions)
